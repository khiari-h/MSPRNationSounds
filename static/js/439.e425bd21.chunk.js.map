{"version":3,"file":"static/js/439.e425bd21.chunk.js","mappings":"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","sources":["component/organisms/ProgrammingOrganisms/ArtistMeeting.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport InfoCard from '../../molecules/InfoCard';\r\nimport Text from '../../atoms/Text';\r\nimport Filter from '../../atoms/Filter';\r\nimport Button from '../../atoms/Button';\r\nimport { fetchWithCache } from '../../../utils/cacheUtils'; \r\nimport {formatDate, formatTime } from '../../../utils/formatUtilis'; \r\nimport { useResponsiveItemsPerPage } from '../../../hooks/useResponsiveItemPerPage';\r\n\r\nconst ArtistMeeting = ({ apiEndpoint = '/api/wordpress/artists_meetings' }) => {\r\n  const [artistMeetings, setArtistMeetings] = useState([]);\r\n  const [filters, setFilters] = useState({ date: '', heuredebut: '', lieu: '', type: '' });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [meetingsPerPage, setMeetingsPerPage] = useState(6);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Utilisation du hook pour ajuster le nombre de meetings par page\r\n  useResponsiveItemsPerPage(setMeetingsPerPage);\r\n\r\n  useEffect(() => {\r\n    const fetchMeetings = async () => {\r\n      try {\r\n        const meetingsData = await fetchWithCache('artistMeetings', apiEndpoint, 3600);\r\n\r\n        const formattedMeetings = await Promise.all(\r\n          meetingsData.map(async (meeting) => {\r\n            if (meeting.acf.photo) {\r\n              const logoData = await fetchWithCache(`logo_${meeting.acf.photo}`, `/api/wordpress/media/${meeting.acf.photo}`, 3600);\r\n              meeting.acf.photo = logoData.source_url;\r\n            }\r\n            meeting.acf.date = formatDate(meeting.acf.date);\r\n            meeting.acf.heuredebut = formatTime(meeting.acf.heuredebut);\r\n            meeting.acf.heurefin = formatTime(meeting.acf.heurefin);\r\n            return meeting;\r\n          })\r\n        );\r\n\r\n        setArtistMeetings(formattedMeetings);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des rencontres!\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMeetings();\r\n  }, [apiEndpoint]);\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    setFilters((prevFilters) => ({ ...prevFilters, [key]: value }));\r\n  };\r\n\r\n  const filteredMeetings = artistMeetings.filter((meeting) => {\r\n    return (\r\n      (filters.date === '' || meeting.acf.date === filters.date) &&\r\n      (filters.heuredebut === '' || meeting.acf.heuredebut === filters.heuredebut) &&\r\n      (filters.lieu === '' || meeting.acf.lieu === filters.lieu) &&\r\n      (filters.type === '' || meeting.acf.type === filters.type)\r\n    );\r\n  });\r\n\r\n  const indexOfLastMeeting = currentPage * meetingsPerPage;\r\n  const indexOfFirstMeeting = indexOfLastMeeting - meetingsPerPage;\r\n  const currentMeetings = filteredMeetings.slice(indexOfFirstMeeting, indexOfLastMeeting);\r\n  const totalPages = Math.ceil(filteredMeetings.length / meetingsPerPage);\r\n\r\n  return (\r\n    <section className=\"container mx-auto py-8\" aria-labelledby=\"artist-meetings-heading\">\r\n      <Text content=\"Rencontres avec les Artistes\" type=\"h1\" className=\"text-concert-title text-center\" id=\"artist-meetings-heading\" />\r\n      {loading ? (\r\n        <p>Chargement des rencontres...</p>\r\n      ) : (\r\n        <>\r\n          {filteredMeetings.length === 0 ? (\r\n            <p>Aucune rencontre trouvée avec les critères sélectionnés.</p>\r\n          ) : (\r\n            <>\r\n              <Filter\r\n                data={artistMeetings.map(meeting => ({\r\n                  date: meeting.acf.date,\r\n                  heuredebut: meeting.acf.heuredebut,\r\n                  lieu: meeting.acf.lieu,\r\n                  type: meeting.acf.type,\r\n                }))}\r\n                filters={filters}\r\n                filterKeys={['date', 'heuredebut', 'lieu', 'type']}\r\n                handleFilterChange={handleFilterChange}\r\n                resetFilters={() => setFilters({ date: '', heuredebut: '', lieu: '', type: '' })}\r\n              />\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {currentMeetings.map((meeting, index) => (\r\n                  <InfoCard\r\n                    key={index}\r\n                    title={meeting.acf.nom}\r\n                    description={meeting.acf.description}\r\n                    image={meeting.acf.photo || 'default.jpg'}\r\n                    additionalInfo={`Date: ${meeting.acf.date}, Heure de début: ${meeting.acf.heuredebut}, Heure de fin: ${meeting.acf.heurefin}, Lieu: ${meeting.acf.lieu}, Type: ${meeting.acf.type}`}\r\n                    type=\"meeting\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div className=\"flex justify-center mt-4\">\r\n                {Array.from({ length: totalPages }, (_, index) => (\r\n                  <Button \r\n                    key={index + 1}\r\n                    onClick={() => setCurrentPage(index + 1)}\r\n                    label={String(index + 1)}\r\n                    className=\"mx-1\"\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ArtistMeeting;\r\n"],"names":["_ref","apiEndpoint","artistMeetings","setArtistMeetings","useState","filters","setFilters","date","heuredebut","lieu","type","currentPage","setCurrentPage","meetingsPerPage","setMeetingsPerPage","loading","setLoading","useResponsiveItemsPerPage","useEffect","async","meetingsData","fetchWithCache","formattedMeetings","Promise","all","map","meeting","acf","photo","logoData","source_url","formatDate","formatTime","heurefin","error","console","fetchMeetings","filteredMeetings","filter","indexOfLastMeeting","indexOfFirstMeeting","currentMeetings","slice","totalPages","Math","ceil","length","_jsxs","className","children","_jsx","Text","content","id","_Fragment","Filter","data","filterKeys","handleFilterChange","key","value","prevFilters","resetFilters","index","InfoCard","title","nom","description","image","additionalInfo","Array","from","_","Button","onClick","label","String"],"sourceRoot":""}