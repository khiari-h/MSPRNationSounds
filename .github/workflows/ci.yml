name: Laravel & React CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: nationsoundsdevelopment
        ports:
          - 3307:3306  # Modification du mappage de port pour éviter les conflits
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Mise à jour vers la dernière version stable

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'  # Assurez-vous d'utiliser PHP 8.2
        extensions: mbstring, xml, bcmath, curl, dom, fileinfo, json, mysql, pdo, tokenizer

    - name: Configurer le fichier .env pour les tests
      run: |
        cp backend/.env.testing backend/.env

    - name: Installer les dépendances Composer
      run: |
        cd backend  # Naviguer vers le répertoire contenant le fichier composer.json
        composer install --prefer-dist --no-progress

    - name: Configurer la base de données
      run: |
        cd backend  # Naviguer vers le répertoire backend
        php artisan key:generate
        php artisan migrate --no-interaction --force

    - name: Exécuter les tests unitaires Laravel
      run: |
        cd backend  # Naviguer vers le répertoire backend
        php artisan test

    - name: Configurer Node.js
      uses: actions/setup-node@v3  # Mise à jour vers la dernière version stable
      with:
        node-version: '20.11.1'

    - name: Installer les dépendances Node.js
      run: |
        cd backend  # Naviguer vers le répertoire backend
        npm install

    - name: Exécuter les tests React
      run: |
        cd backend  # Naviguer vers le répertoire backend
        npm test -- --watchAll=false

    - name: Compiler l'application React
      run: |
        cd backend  # Naviguer vers le répertoire backend
        npm run build

    - name: Exécuter les tests de performance Lighthouse
      run: |
        cd backend  # Naviguer vers le répertoire backend
        npx lhci autorun

    - name: Exécuter l'analyse de sécurité
      run: |
        cd backend  # Naviguer vers le répertoire backend
        composer require --dev enlightn/security-checker
        php artisan security:check

    - name: Obtenir les logs du conteneur MySQL
      if: failure()
      run: docker logs $(docker ps -q --filter "ancestor=mysql:5.7")
