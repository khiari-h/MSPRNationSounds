name: Laravel & React CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: nationsoundstest  
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, bcmath, curl, dom, fileinfo, json, mysql, pdo, tokenizer

    - name: Créer ou utiliser le fichier .env
      run: |
        if [ ! -f ./backend/.env ]; then
          echo "APP_NAME=Laravel" > ./backend/.env
          echo "APP_ENV=testing" >> ./backend/.env
          echo "APP_KEY=base64:vhFORI6EMx+FuPHItMDGvVCcoASMtT1AYnGt89LXkXo=" >> ./backend/.env
          echo "APP_DEBUG=true" >> ./backend/.env
          echo "APP_URL=http://localhost" >> ./backend/.env
          echo "DB_CONNECTION=mysql" >> ./backend/.env
          echo "DB_HOST=mysql" >> ./backend/.env
          echo "DB_PORT=3306" >> ./backend/.env
          echo "DB_DATABASE=nationsoundstest" >> ./backend/.env
          echo "DB_USERNAME=root" >> ./backend/.env
          echo "DB_PASSWORD=" >> ./backend/.env
        fi
      working-directory: ./backend

    - name: Attendre que MySQL soit prêt
      run: sleep 20

    - name: Installer les dépendances Composer
      run: composer install --prefer-dist --no-progress
      working-directory: ./backend

    - name: Configurer la base de données
      run: php artisan key:generate && php artisan migrate --no-interaction --force
      working-directory: ./backend

    - name: Exécuter les tests unitaires Laravel
      run: php artisan test
      working-directory: ./backend

    - name: Configurer Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.1'

    - name: Installer les dépendances Node.js (frontend)
      run: npm install
      working-directory: ./frontend

    - name: Exécuter les tests React
      run: npm test -- --watchAll=false
      working-directory: ./frontend

    - name: Compiler l'application React
      run: npm run build
      working-directory: ./frontend

    - name: Exécuter les tests de performance Lighthouse
      run: npx lhci autorun
      working-directory: ./frontend

    - name: Exécuter l'analyse de sécurité
      run: composer require --dev enlightn/security-checker && php artisan security:check
      working-directory: ./backend

    - name: Afficher les logs du conteneur MySQL
      if: failure()
      run: docker logs $(docker ps -q --filter "ancestor=mysql:5.7")
